#!/usr/bin/env cargo
---cargo
package.edition = "2024"

[dependencies]
qubit_device = { path = "../crates/qubit_device" }
qubit_macros = { path = "../crates/qubit_macros", default-features = false, features = ["import"] }
---

use std::io::Write;

qubit_macros::import_device!(AUTHOR, MODEL);

fn main() {
	let author = env!("AUTHOR");
	let model = env!("MODEL");

	let target_triple = device::PROCESSOR.target_triple();

	let mcu = device::PROCESSOR.as_str().to_lowercase();

	let extension = format!(
		r#"
[build]
target = "{target_triple}"

[target.{target_triple}]
rustflags = ["--cfg", 'mcu="{mcu}"']

#[host]
#rustflags = ["--cfg", 'device="import"']

[env]
QUBIT_AUTHOR = "{author}"
QUBIT_MODEL = "{model}"
"#
	);

	let cwd = std::env::current_dir().unwrap();
	let config_extend_path = std::path::Path::new(&cwd).join(".cargo/config-extend.toml");

	let mut file = std::fs::File::create(&config_extend_path).unwrap();

	writeln!(
		&mut file,
		"# This file is automatically generated and not intended for manual editing."
	)
	.unwrap();

	file.write_all(&extension.into_bytes()).unwrap();
}
